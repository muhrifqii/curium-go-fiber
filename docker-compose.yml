version: '3.7'

# networks:
#   intranet:
#     external: false

services:
  web:
    image: curium-go-fiber
    container_name: curium_go_fiber_api
    env_file:
      - .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13.15
    container_name: curium_go_fiber_db
    restart: on-failure
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - ${DATABASE_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 30s
      timeout: 20s
      retries: 5

  loki:
    image: grafana/loki:3.0.0
    container_name: curium_go_fiber_loki
    restart: on-failure
    ports:
      - 3131:3131
    volumes:
      - ./infras/loki:/mnt/config
    healthcheck:
      test:
        [
          "CMD",
          "wget --no-verbose --tries=1 --spider http://localhost:3131/ready",
          "|| exit 1"
        ]
      interval: 10s
      timeout: 7s
      retries: 5
      start_period: 30s
    command: -config.file=/mnt/config/loki-config.yml

  promtail:
    image: grafana/promtail:3.0.0
    container_name: curium_go_fiber_promtail
    depends_on:
      loki:
        condition: service_healthy
    volumes:
      - ./infras/loki:/mnt/config
      - ./infras/logs:/etc/serverlog
    command: -config.file=/mnt/config/promtail-config.yml

  grafana:
    image: grafana/grafana:11.0.0
    container_name: curium_go_fiber_grafana
    ports:
      - 3030:3000
    depends_on:
      - loki
    volumes:
      - ./infras/grafana:/etc/grafana/provisioning
